{"version":3,"sources":["Detail.js"],"names":["제목","styled","div","최근본page","props","className","src","id","width","onClick","history","push","shoes","title","TabContent","useEffect","스위치변경","누른탭","Info","value","quan","onChange","e","target","재고","찾은상품","dispatch","type","payload","alert","connect","state","reducer","reducer3","useState","alert변경","useParams","useHistory","find","x","누른탭변경","스위치","cart","cart변경","타이머","setTimeout","clearTimeout","localStorage","getItem","JSON","parse","length","includes","unshift","pop","Set","setItem","stringify","content","price","new재고","재고변경","map","i","name","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"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","file":"static/js/4.c6788329.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport React, { useEffect, useState } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nconst 제목 = styled.div`\n  font-size: 25px;\n`;\n\nfunction Detail(props) {\n  let [alert, alert변경] = useState(true);\n  let { id } = useParams();\n  let history = useHistory();\n  let 찾은상품 = props.shoes.find(x => x.id == id);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n  let [cart, cart변경] = useState([]);\n\n  useEffect(() => {\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    }, 2000);\n    return () => {\n      clearTimeout(타이머);\n    };\n    // setTimeout을 사용하면 꼭 제거도 같이해줘야 버그가 덜생긴다\n  }, []);\n\n  useEffect(() => {\n    let cart = localStorage.getItem('최근본상품');\n    cart == null ? (cart = []) : (cart = JSON.parse(cart));\n    cart.length < 3\n      ? cart.unshift(id)\n      : cart.includes(id)\n      ? cart.unshift(id)\n      : cart.pop(),\n      cart.unshift(id);\n    cart = [...new Set(cart)];\n    localStorage.setItem('최근본상품', JSON.stringify(cart));\n    cart변경(cart);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"container\">\n        <제목>Detail</제목>\n        {alert === true &&\n        props.재고[찾은상품.id] < 3 &&\n        props.재고[찾은상품.id] > 0 ? (\n          <div className=\"my-alert\">\n            <p>재고가 얼마 남지 않았습니다</p>\n          </div>\n        ) : null}\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img\n              src={`https://codingapple1.github.io/shop/shoes${\n                찾은상품.id + 1\n              }.jpg`}\n              width=\"100%\"\n            />\n          </div>\n          <div className=\"col-md-6 mt-4\">\n            <h4 className=\"pt-5\">{찾은상품.title}</h4>\n            <p>{찾은상품.content}</p>\n            <p>{찾은상품.price}원</p>\n            <Info\n              재고={props.재고}\n              찾은상품={찾은상품}\n              dispatch={props.dispatch}\n              quan={props.quan}\n            />\n            {props.재고[찾은상품.id] > 0 ? (\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => {\n                  let new재고 = [...props.재고];\n                  props.재고변경(\n                    new재고.map((x, i) => (i == id ? x - props.quan : x))\n                  );\n                  props.dispatch({\n                    type: '항목추가',\n                    payload: {\n                      id: props.state.length,\n                      name: 찾은상품.title,\n                      quan: props.quan,\n                      재고: props.재고[찾은상품.id],\n                    },\n                  });\n                  history.push('/cart');\n                }}>\n                주문하기\n              </button>\n            ) : null}\n\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => history.push('/')}>\n              뒤로가기\n            </button>\n          </div>\n        </div>\n\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n          <Nav.Item>\n            <Nav.Link\n              eventKey=\"link-0\"\n              onClick={() => {\n                스위치변경(false);\n                누른탭변경(0);\n              }}>\n              Active\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              eventKey=\"link-1\"\n              onClick={() => {\n                스위치변경(false);\n                누른탭변경(1);\n              }}>\n              Option 2\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n          <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n        </CSSTransition>\n      </div>\n      <div className=\"container\">\n        <div className=\"최근본상품 mt-4\">\n          <h5>최근본상품</h5>\n          <div className=\"row\">\n            {cart.map(id => {\n              return (\n                <최근본page id={id} shoes={props.shoes} history={history} />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction 최근본page(props) {\n  return (\n    <div className=\"col\">\n      <img\n        src={`https://codingapple1.github.io/shop/shoes${+props.id + 1}.jpg`}\n        width=\"100cm\"\n        onClick={() => {\n          props.history.push(`/detail/${props.id}`);\n        }}\n      />\n      <p>{props.shoes[props.id].title}</p>\n    </div>\n  );\n}\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n  if (props.누른탭 === 0) {\n    return <div>0번째 내용입니다</div>;\n  } else if (props.누른탭 === 1) {\n    return <div>1번째 내용입니다</div>;\n  }\n}\n\nfunction Info(props) {\n  return (\n    <p>\n      재고 :\n      <input\n        value={props.quan}\n        onChange={e => {\n          if (e.target.value <= props.재고[props.찾은상품.id]) {\n            props.dispatch({ type: '변경', payload: e.target.value });\n          } else {\n            alert(`${props.재고[props.찾은상품.id]} 이하로만 입력가능합니다`);\n          }\n        }}\n      />\n      / {props.재고[props.찾은상품.id]}\n    </p>\n  );\n}\n\nfunction 함수명(state) {\n  return {\n    state: state.reducer,\n    quan: state.reducer3,\n  };\n}\n\nexport default connect(함수명)(Detail);\n// export default Detail;\n"],"sourceRoot":""}